{"ast":null,"code":"var _jsxFileName = \"D:\\\\code\\\\code_java\\\\project java\\\\sharemybooks\\\\web-app\\\\src\\\\pages\\\\Login.jsx\",\n  _s = $RefreshSig$();\nimport { Box, Button, Card, CardContent, Divider, TextField, Typography, Snackbar, Alert } from \"@mui/material\";\nimport GoogleIcon from \"@mui/icons-material/Google\";\nimport { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { logIn, isAuthenticated } from \"../services/authenticationService\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Login() {\n  _s();\n  const navigate = useNavigate();\n  const handleCloseSnackBar = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    setSnackBarOpen(false);\n  };\n  const handleClick = () => {\n    alert(\"Google login is not implemented yet\");\n  };\n  useEffect(() => {\n    if (isAuthenticated()) {\n      navigate(\"/\");\n    }\n  }, [navigate]);\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [snackBarOpen, setSnackBarOpen] = useState(false);\n  const [snackBarMessage, setSnackBarMessage] = useState(\"\");\n  const handleSubmit = async event => {\n    event.preventDefault();\n    try {\n      const response = await logIn(username, password);\n      console.log(\"Response body :\", response.data);\n      navigate(\"/\");\n    } catch (error) {\n      console.error(\"Login failed:\", error);\n      setSnackBarMessage(\"Login failed. Please check your credentials.\");\n      setSnackBarOpen(true);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Snackbar, {\n      open: snackBarOpen,\n      onClose: handleCloseSnackBar,\n      autoHideDuration: 6000,\n      anchorOrigin: {\n        vertical: \"top\",\n        horizontal: \"right\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Alert, {\n        onClose: handleCloseSnackBar,\n        severity: \"error\",\n        variant: \"filled\",\n        sx: {\n          width: \"100%\"\n        },\n        children: snackBarMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      flexDirection: \"column\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      height: \"100vh\",\n      bgcolor: \"#f0f2f5\",\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        sx: {\n          minWidth: 300,\n          maxWidth: 400,\n          boxShadow: 3,\n          borderRadius: 3,\n          padding: 4\n        },\n        children: /*#__PURE__*/_jsxDEV(CardContent, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h5\",\n            component: \"h1\",\n            gutterBottom: true,\n            children: \"Welcome to Devtetia\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            component: \"form\",\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n            width: \"100%\",\n            onSubmit: handleSubmit,\n            children: [/*#__PURE__*/_jsxDEV(TextField, {\n              label: \"Username\",\n              variant: \"outlined\",\n              fullWidth: true,\n              margin: \"normal\",\n              value: username,\n              onChange: e => setUsername(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              label: \"Password\",\n              type: \"password\",\n              variant: \"outlined\",\n              fullWidth: true,\n              margin: \"normal\",\n              value: password,\n              onChange: e => setPassword(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              variant: \"contained\",\n              color: \"primary\",\n              size: \"large\",\n              onClick: handleSubmit,\n              fullWidth: true,\n              sx: {\n                mt: \"15px\",\n                mb: \"25px\"\n              },\n              children: \"Login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            display: \"flex\",\n            flexDirection: \"column\",\n            width: \"100%\",\n            gap: \"25px\",\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              type: \"button\",\n              variant: \"contained\",\n              color: \"secondary\",\n              size: \"large\",\n              onClick: handleClick,\n              fullWidth: true,\n              sx: {\n                gap: \"10px\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(GoogleIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 148,\n                columnNumber: 33\n              }, this), \"Continue with Google\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              variant: \"contained\",\n              color: \"success\",\n              size: \"large\",\n              children: \"Create an account\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(Login, \"5E8sZ0JccObAaNNTuJ63F0coUOc=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["Box","Button","Card","CardContent","Divider","TextField","Typography","Snackbar","Alert","GoogleIcon","useEffect","useState","useNavigate","logIn","isAuthenticated","jsxDEV","_jsxDEV","Fragment","_Fragment","Login","_s","navigate","handleCloseSnackBar","event","reason","setSnackBarOpen","handleClick","alert","username","setUsername","password","setPassword","snackBarOpen","snackBarMessage","setSnackBarMessage","handleSubmit","preventDefault","response","console","log","data","error","children","open","onClose","autoHideDuration","anchorOrigin","vertical","horizontal","severity","variant","sx","width","fileName","_jsxFileName","lineNumber","columnNumber","display","flexDirection","alignItems","justifyContent","height","bgcolor","minWidth","maxWidth","boxShadow","borderRadius","padding","component","gutterBottom","onSubmit","label","fullWidth","margin","value","onChange","e","target","type","color","size","onClick","mt","mb","gap","_c","$RefreshReg$"],"sources":["D:/code/code_java/project java/sharemybooks/web-app/src/pages/Login.jsx"],"sourcesContent":["import {\r\n    Box,\r\n    Button,\r\n    Card,\r\n    CardContent,\r\n    Divider,\r\n    TextField,\r\n    Typography,\r\n    Snackbar,\r\n    Alert,\r\n} from \"@mui/material\";\r\n\r\nimport GoogleIcon from \"@mui/icons-material/Google\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { logIn, isAuthenticated } from \"../services/authenticationService\";\r\n\r\nexport default function Login() {\r\n    const navigate = useNavigate();\r\n    const handleCloseSnackBar = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n        setSnackBarOpen(false);\r\n    };\r\n\r\n    const handleClick = () => {\r\n        alert(\"Google login is not implemented yet\"\r\n        );\r\n    };\r\n    useEffect(() => {\r\n        if (isAuthenticated()) {\r\n            navigate(\"/\");\r\n        }\r\n    }, [navigate]);\r\n\r\n    const [username, setUsername] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [snackBarOpen, setSnackBarOpen] = useState(false);\r\n    const [snackBarMessage, setSnackBarMessage] = useState(\"\");\r\n\r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n\r\n        try {\r\n            const response = await logIn(username, password);\r\n            console.log(\"Response body :\", response.data);\r\n            navigate(\"/\");\r\n        }\r\n        catch (error) {\r\n            console.error(\"Login failed:\", error);\r\n            setSnackBarMessage(\"Login failed. Please check your credentials.\");\r\n            setSnackBarOpen(true);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Snackbar\r\n                open={snackBarOpen}\r\n                onClose={handleCloseSnackBar}\r\n                autoHideDuration={6000}\r\n                anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n            >\r\n                <Alert\r\n                    onClose={handleCloseSnackBar}\r\n                    severity=\"error\"\r\n                    variant=\"filled\"\r\n                    sx={{ width: \"100%\" }}\r\n                >\r\n                    {snackBarMessage}\r\n                </Alert>\r\n            </Snackbar>\r\n            <Box\r\n                display=\"flex\"\r\n                flexDirection=\"column\"\r\n                alignItems=\"center\"\r\n                justifyContent=\"center\"\r\n                height=\"100vh\"\r\n                bgcolor={\"#f0f2f5\"}\r\n            >\r\n                <Card\r\n                    sx={{\r\n                        minWidth: 300,\r\n                        maxWidth: 400,\r\n                        boxShadow: 3,\r\n                        borderRadius: 3,\r\n                        padding: 4,\r\n                    }}\r\n                >\r\n                    <CardContent>\r\n                        <Typography variant=\"h5\" component=\"h1\" gutterBottom>\r\n                            Welcome to Devtetia\r\n                        </Typography>\r\n                        <Box\r\n                            component=\"form\"\r\n                            display=\"flex\"\r\n                            flexDirection=\"column\"\r\n                            alignItems=\"center\"\r\n                            justifyContent=\"center\"\r\n                            width=\"100%\"\r\n                            onSubmit={handleSubmit}\r\n                        >\r\n                            <TextField\r\n                                label=\"Username\"\r\n                                variant=\"outlined\"\r\n                                fullWidth\r\n                                margin=\"normal\"\r\n                                value={username}\r\n                                onChange={(e) => setUsername(e.target.value)}\r\n                            />\r\n                            <TextField\r\n                                label=\"Password\"\r\n                                type=\"password\"\r\n                                variant=\"outlined\"\r\n                                fullWidth\r\n                                margin=\"normal\"\r\n                                value={password}\r\n                                onChange={(e) => setPassword(e.target.value)}\r\n                            />\r\n                            <Button\r\n                                type=\"submit\"\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                size=\"large\"\r\n                                onClick={handleSubmit}\r\n                                fullWidth\r\n                                sx={{\r\n                                    mt: \"15px\",\r\n                                    mb: \"25px\",\r\n                                }}\r\n                            >\r\n                                Login\r\n                            </Button>\r\n                            <Divider></Divider>\r\n                        </Box>\r\n\r\n                        <Box display=\"flex\" flexDirection=\"column\" width=\"100%\" gap=\"25px\">\r\n                            <Button\r\n                                type=\"button\"\r\n                                variant=\"contained\"\r\n                                color=\"secondary\"\r\n                                size=\"large\"\r\n                                onClick={handleClick}\r\n                                fullWidth\r\n                                sx={{ gap: \"10px\" }}\r\n                            >\r\n                                <GoogleIcon />\r\n                                Continue with Google\r\n                            </Button>\r\n                            <Button\r\n                                type=\"submit\"\r\n                                variant=\"contained\"\r\n                                color=\"success\"\r\n                                size=\"large\"\r\n                            >\r\n                                Create an account\r\n                            </Button>\r\n                        </Box>\r\n                    </CardContent>\r\n                </Card>\r\n            </Box>\r\n        </>\r\n    );\r\n}\r\n\r\n\r\n\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}