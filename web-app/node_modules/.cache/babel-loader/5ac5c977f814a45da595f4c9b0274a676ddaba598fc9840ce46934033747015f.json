{"ast":null,"code":"var _jsxFileName = \"D:\\\\code\\\\code_java\\\\project java\\\\sharemybooks\\\\web-app\\\\src\\\\pages\\\\Home.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState, useRef } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Box, Card, CircularProgress, Typography } from \"@mui/material\";\nimport { isAuthenticated } from \"../services/authenticationService\";\nimport Scene from \"./Scene\";\nimport Post from \"../components/Post\";\nimport { getMyPosts } from \"../services/postService\";\nimport { logOut } from \"../services/authenticationService\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Home() {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const [page, setPage] = useState([1]);\n  const [totalPage, setTotalPage] = useState([0]);\n  const [loading, setLoading] = useState(true);\n  const [hasMore, setHasMore] = useState(false);\n  const observer = useRef();\n  const lastPostElementRef = useRef();\n  const navigate = useNavigate();\n  useEffect(() => {\n    if (!isAuthenticated()) {\n      navigate(\"/login\");\n    } else {\n      loadPosts(page);\n    }\n  }, [navigate, page]);\n  const loadPosts = page => {\n    console.log(`loading posts for page ${page}`);\n    setLoading(true);\n    getMyPosts(page).then(response => {\n      setTotalPage(response.data.result.totalPage);\n      setPosts(prevPost => [...prevPost, ...response.data.result.posts]);\n      setHasMore(response.data.result.data.length > 0);\n      console.log(\"loaded posts:\", response.data.result);\n    }).catch(error => {\n      if (error.response.status === 401) {\n        logOut();\n        navigate(\"/login\");\n      }\n    }).finally(() => {\n      setLoading(false);\n    });\n  };\n  useEffect(() => {\n    if (!hasMore) return;\n    if (observer.current) observer.current.disconnect();\n    observer.current = new IntersectionObserver(entries => {\n      if (entries[0].isIntersecting) {\n        if (page < totalPages) {\n          setPage(prevPage => prevPage + 1);\n        }\n      }\n    });\n    if (lastPostElementRef.current) {\n      observer.current.observe(lastPostElementRef.current);\n    }\n    setHasMore(false);\n  }, [hasMore]);\n  return /*#__PURE__*/_jsxDEV(Scene, {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      sx: {\n        minWidth: 500,\n        maxWidth: 600,\n        boxShadow: 3,\n        borderRadius: 2,\n        padding: \"20px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: \"flex\",\n          flexDirection: \"column\",\n          alignItems: \"flex-start\",\n          width: \"100%\",\n          gap: \"10px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          sx: {\n            fontSize: 18,\n            mb: \"10px\"\n          },\n          children: \"Your posts,\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: \"flex\",\n            flexDirection: \"row\",\n            justifyContent: \"space-between\",\n            alignItems: \"flex-start\",\n            width: \"100%\" // Ensure content takes full width\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }, this), posts.map((post, index) => {\n          if (posts.length === index + 1) {\n            return /*#__PURE__*/_jsxDEV(Post, {\n              ref: lastPostElementRef,\n              post: post\n            }, post.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 33\n            }, this);\n          } else {\n            return /*#__PURE__*/_jsxDEV(Post, {\n              post: post\n            }, post.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 36\n            }, this);\n          }\n        }), loading && /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: \"flex\",\n            justifyContent: \"center\",\n            width: \"100%\"\n          },\n          children: /*#__PURE__*/_jsxDEV(CircularProgress, {\n            size: \"24px\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 9\n  }, this);\n}\n_s(Home, \"O67LvqILaYxAAdIXx4LG/sjgA/g=\", false, function () {\n  return [useNavigate];\n});\n_c = Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["useEffect","useState","useRef","useNavigate","Box","Card","CircularProgress","Typography","isAuthenticated","Scene","Post","getMyPosts","logOut","jsxDEV","_jsxDEV","Home","_s","posts","setPosts","page","setPage","totalPage","setTotalPage","loading","setLoading","hasMore","setHasMore","observer","lastPostElementRef","navigate","loadPosts","console","log","then","response","data","result","prevPost","length","catch","error","status","finally","current","disconnect","IntersectionObserver","entries","isIntersecting","totalPages","prevPage","observe","children","sx","minWidth","maxWidth","boxShadow","borderRadius","padding","display","flexDirection","alignItems","width","gap","fontSize","mb","fileName","_jsxFileName","lineNumber","columnNumber","justifyContent","map","post","index","ref","id","size","_c","$RefreshReg$"],"sources":["D:/code/code_java/project java/sharemybooks/web-app/src/pages/Home.jsx"],"sourcesContent":["import { useEffect, useState, useRef } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { Box, Card, CircularProgress, Typography } from \"@mui/material\";\r\nimport { isAuthenticated } from \"../services/authenticationService\";\r\nimport Scene from \"./Scene\";\r\nimport Post from \"../components/Post\";\r\nimport { getMyPosts } from \"../services/postService\";\r\nimport { logOut } from \"../services/authenticationService\";\r\n\r\nexport default function Home() {\r\n    const [posts, setPosts] = useState([]);\r\n    const [page, setPage] = useState([1]);\r\n    const [totalPage, setTotalPage] = useState([0]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [hasMore, setHasMore] = useState(false);\r\n    const observer = useRef();\r\n    const lastPostElementRef = useRef();\r\n    const navigate = useNavigate();\r\n    useEffect(() => {\r\n        if (!isAuthenticated()) {\r\n            navigate(\"/login\");\r\n        }\r\n        else {\r\n            loadPosts(page);\r\n        }\r\n    }, [navigate, page]);\r\n\r\n    const loadPosts = (page) => {\r\n        console.log(`loading posts for page ${page}`);\r\n        setLoading(true);\r\n        getMyPosts(page).then((response) => {\r\n            setTotalPage(response.data.result.totalPage);\r\n            setPosts((prevPost) => [...prevPost, ...response.data.result.posts])\r\n            setHasMore(response.data.result.data.length > 0);\r\n            console.log(\"loaded posts:\", response.data.result);\r\n        })\r\n            .catch((error) => {\r\n                if (error.response.status === 401) {\r\n                    logOut();\r\n                    navigate(\"/login\");\r\n                }\r\n            })\r\n            .finally(() => {\r\n                setLoading(false);\r\n            });\r\n    };\r\n    useEffect(() => {\r\n        if (!hasMore) return;\r\n        if (observer.current) observer.current.disconnect();\r\n        observer.current = new IntersectionObserver((entries) => {\r\n            if (entries[0].isIntersecting) {\r\n                if (page < totalPages) {\r\n                    setPage((prevPage) => prevPage + 1);\r\n                }\r\n            }\r\n        });\r\n        if (lastPostElementRef.current) {\r\n            observer.current.observe(lastPostElementRef.current);\r\n        }\r\n        setHasMore(false);\r\n    }, [hasMore]);\r\n\r\n    return (\r\n        <Scene>\r\n            <Card\r\n                sx={{\r\n                    minWidth: 500,\r\n                    maxWidth: 600,\r\n                    boxShadow: 3,\r\n                    borderRadius: 2,\r\n                    padding: \"20px\",\r\n                }}\r\n            >\r\n                <Box\r\n                    sx={{\r\n                        display: \"flex\",\r\n                        flexDirection: \"column\",\r\n                        alignItems: \"flex-start\",\r\n                        width: \"100%\",\r\n                        gap: \"10px\",\r\n                    }}\r\n                >\r\n                    <Typography\r\n                        sx={{\r\n                            fontSize: 18,\r\n                            mb: \"10px\",\r\n                        }}\r\n                    >\r\n                        Your posts,\r\n                    </Typography>\r\n                    <Box\r\n                        sx={{\r\n                            display: \"flex\",\r\n                            flexDirection: \"row\",\r\n                            justifyContent: \"space-between\",\r\n                            alignItems: \"flex-start\",\r\n                            width: \"100%\", // Ensure content takes full width\r\n                        }}\r\n                    ></Box>\r\n                    {posts.map((post, index) => {\r\n                        if (posts.length === index + 1) {\r\n                            return (\r\n                                <Post ref={lastPostElementRef} key={post.id} post={post} />\r\n                            );\r\n                        } else {\r\n                            return <Post key={post.id} post={post} />;\r\n                        }\r\n                    })}\r\n                    {loading && (\r\n                        <Box\r\n                            sx={{ display: \"flex\", justifyContent: \"center\", width: \"100%\" }}\r\n                        >\r\n                            <CircularProgress size=\"24px\" />\r\n                        </Box>\r\n                    )}\r\n                </Box>\r\n            </Card>\r\n        </Scene>\r\n    );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}